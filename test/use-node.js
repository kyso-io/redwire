// Generated by CoffeeScript 1.8.0
var UseNode, expect;

expect = require('chai').expect;

UseNode = require('../src/use-node');

describe('Use Node', function() {
  it('should exec with no nodes', function() {
    var node;
    node = new UseNode();
    return node.exec(function() {});
  });
  it('should exec with no args', function() {
    var failed, node;
    node = new UseNode();
    failed = true;
    node.use(function(next) {
      failed = false;
      return next();
    });
    node.exec(function() {});
    return expect(failed).to.be["false"]();
  });
  it('should exec with args', function() {
    var failed, node;
    node = new UseNode();
    failed = true;
    node.use(function(arg, next) {
      failed = false;
      expect(arg).to.be.eql('yup');
      return next();
    });
    node.exec('yup', function() {});
    return expect(failed).to.be["false"]();
  });
  return it('should cascade', function() {
    var failed1, failed2, node;
    node = new UseNode();
    failed1 = true;
    node.use(function(arg, next) {
      failed1 = false;
      expect(arg).to.be.eql('yup');
      return next();
    });
    failed2 = true;
    node.use(function(arg, next) {
      failed2 = false;
      expect(arg).to.be.eql('yup');
      return next();
    });
    node.exec('yup', function() {});
    expect(failed1).to.be["false"]();
    return expect(failed2).to.be["false"]();
  });
});

// Generated by CoffeeScript 1.8.0
var RedWire, expect, http, testServer;

expect = require('chai').expect;

RedWire = require('../src/redwire');

http = require('http');

testServer = function(port, cb) {
  var server;
  server = http.createServer(function(req, res) {
    res.write('');
    res.end();
    cb(req);
    return server.close();
  });
  return server.listen(port);
};

describe('RedWire', function() {
  it('should have sensible defaults', function() {
    var redwire;
    redwire = new RedWire();
    return redwire.close();
  });
  it('should autoprefix source urls with http:// if absent', function() {
    var passed, redwire;
    redwire = new RedWire({
      http: {
        port: 53435
      }
    });
    passed = false;
    redwire.http('example.com', function(mount, url, req, res, next) {
      expect(url).to.be.eql('http://example.com/test');
      return passed = true;
    });
    redwire.http('example.com').exec('http://example.com/test');
    return expect(passed).to.be.eql(true);
  });
  return it('should autoprefix target urls with http:// if absent', function(done) {
    var redwire;
    redwire = new RedWire({
      http: {
        port: 53436
      }
    });
    redwire.http('localhost:53436', 'localhost:54676');
    testServer(54676, function(req) {
      return expect(req.headers['host']).to.be.eql('localhost:53436');
    });
    return http.get('http://localhost:53436', function(res) {
      redwire.close();
      return done();
    });
  });
});
